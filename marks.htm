<!DOCTYPE html>
<html lang="en">
<head>
<title>KYC Marks</title>
<style>
#map { height:500px; width:800px; border:1px solid black;}
#markData { width: 200px; padding-left:1em; font-family:courier;}
#map, #markData { float:left; }
#mouse {font-weight: bold;}
.rb {width:150px; float:left;padding-left:1em; padding-bottom: 2em; font-family:courier;}
#toggleGhosts { display: none;}
.lOffset { margin-left: 1em; }
#version { float:right; width:450px; padding:1em; right:0; position:absolute;}
</style>
</head>
<body>
<div id="version">
Version: <strong>2010-04-19 16:00</strong> - <strong>To do:</strong> persistance.
</div>

<h3>KYC Marks</h3>

<span>Mouse Lat/Lon: <input id="mouse" type="text"> 
<a id="toggleGrids" class="lOffset" href="#">Grid (Dec)</a> 
<span class="lOffset">Bearings: <span id="bearing">True</span> <a id="toggleBearings"  href="#">switch</a></span>
<a id="toggleGhosts" class="lOffset" href="#">Hide ghosts</a>
<a id="addRC" class="lOffset" href="#">Add RC</a>
<a id="addMark" class="lOffset" href="#">Add Mark</a>
</span>
<div style="clear:both"></div>
<div id="map"></div>
<div id="markData"></div>
<div style="clear:both"></div>
<div id="rbdata"></div>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js" type="text/javascript"></script>
<script type="text/javascript">
/*
var gmKeys= {
		"k7waterfrontorg" : "ABQIAAAA1p3H4HjgFRGggryYDUwteBR-GVf7FupmKPSRacfkHsUAYJ32hxQkhp8NHbvWfAqlbX-s46HBiGLxpQ",
		"k7waterfrontcom" : "ABQIAAAA9UjYEZNshce6n1Gi1oDOZRQvrUIvRiY5z4Dot4oYMy9uZJYfGhSveungqDjj2yffNXVThDc_wbPzGA",
		"k7waterfrontca"  : "ABQIAAAA9UjYEZNshce6n1Gi1oDOZRQtlChVTc9c46L-tXnUNcQRfaZ7YBRdIcqdc_UNdJwJRglpIdE0KKCLZg",
		}, 
	gmKey= "ABQIAAAA1p3H4HjgFRGggryYDUwteBT2yXp_ZAY8_ufC3CFXhHIE1NvwkxRKJ9lPafzRFCzaRsPQSUSKAe2tww";
*/	
</script>



<script src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAA1p3H4HjgFRGggryYDUwteBT2yXp_ZAY8_ufC3CFXhHIE1NvwkxRKJ9lPafzRFCzaRsPQSUSKAe2tww" type="text/javascript"></script>
<script src="jquery.gmaps.js" type="text/javascript"></script>
<script src="kycMarks.js" type="text/javascript"></script>
<script src="LatLonGraticules.js" type="text/javascript"></script>

<script type="text/javascript">

// overriding the default behaviour which is a .push()
var oldAddToMarkerCollection= $.fn.gMap.addToMarkerCollection;

$.fn.gMap.addToMarkerCollection = function( marker, map ) {
	// map.gMarkers.push( marker );	
	oldAddToMarkerCollection( marker, map );
	map.gMarkers.sort( markerSort );
};



var rcBoats=  [ 
	{ latitude: 44.2230, longitude: -76.485, html: "1", icon : { image : "icons/others/marker-ORANGE-1.png"}, draggable: true } ,
	{ latitude: 44.2230, longitude: -76.485, html: "2", icon : { image : "icons/others/marker-ORANGE-2.png"}, draggable: true } ,
	{ latitude: 44.2230, longitude: -76.485, html: "3", icon : { image : "icons/others/marker-ORANGE-3.png"}, draggable: true } ,
	{ latitude: 44.2230, longitude: -76.485, html: "4", icon : { image : "icons/others/marker-ORANGE-4.png"}, draggable: true } ,
	{ latitude: 44.2230, longitude: -76.485, html: "5", icon : { image : "icons/others/marker-ORANGE-5.png"}, draggable: true } 		
];

var newMarks=  [ 
	{ latitude: 44.2160, longitude: -76.45, html: "A", icon : { image : "icons/others/marker-YELLOW-A.png"}, draggable: true } ,
	{ latitude: 44.2160, longitude: -76.45, html: "T", icon : { image : "icons/others/marker-YELLOW-T.png"}, draggable: true } ,
	{ latitude: 44.2160, longitude: -76.45, html: "U", icon : { image : "icons/others/marker-YELLOW-U.png"}, draggable: true } ,
	{ latitude: 44.2160, longitude: -76.45, html: "W", icon : { image : "icons/others/marker-YELLOW-W.png"}, draggable: true } 
];

$(function() {
	var myDefaults = { 
		scrollwheel: false,		
		zoom: 13,
		latitude: 44.2044,
		longitude: -76.4949,
		draggable: false };

	var options= $.extend( {}, myDefaults, kycMarks );
	
	$("#map").gMap( options );



	$gmap.declination= 13;  // positive is declination west
	$gmap.bearings="true";
	
	
	$gmap.userBearing = function( degrees ) {
		var deg= (+degrees);
		if (this.bearings.toLowerCase()=== "magnetic") {  
			var declination= this.declination || 0; 
			if (declination===0 ) { return deg; }
			deg= deg + declination;
			if ( deg === 360 ) { 
				deg= 0; 
			}
			if ( deg > 360 ) { 
				deg= deg-360; 
			}
			if ( deg < 0 ) { 
				deg= deg+360; 
			}
		}
		return deg; 
	}


	
	////Mouse pointer movement updates the LL indicator
	GEvent.addListener($gmap, "mousemove", function(point) {
		document.getElementById("mouse").value= point.toUrlValue();
	}); 
	

	var markers= $gmap.gMarkers;
/*
	$( markers ).each( function() {
		GEvent.addListener( this, "dragend",  dragEnd );
	})	
*/	
	$(document).bind( "markerChange", dragEnd )
	
	displayMarksLL();
	
	// Show/hide ghosts
	$("#toggleGhosts").toggle(
		function() { $(this).html("Show ghosts"); ghosts( false ); },
		function() { $(this).html("Hide ghosts"); ghosts( true ); }
	);
	
	// Flop grids
	$("#toggleGrids").toggle(
		function() { 
			$(this).html("Grid (deg)");  
			if( $gmap.grat ) { $gmap.removeOverlay( $gmap.grat ); }	
			$gmap.grat = new LatLonGraticule();			
			$gmap.addOverlay( $gmap.grat );					
		},
		function() { 
			$(this).html("No grid");  
			if( $gmap.grat ) { $gmap.removeOverlay( $gmap.grat ); }			
			$gmap.grat = new LatLonGraticule(true);
			$gmap.addOverlay( $gmap.grat );					
		},
		function() { 
			$(this).html("Grid (dec)"); 
			if( $gmap.grat ) { 
				$gmap.removeOverlay( $gmap.grat ); 
				$gmap.grat= {};
			} 
		}		
	);	
	
	// Flop bearings
	$("#toggleBearings").toggle(
		function() { 
			$("#bearing").html("Mag");
			$gmap.bearings= "magnetic";
			displayMarksLL();
		},
		function() { 
			$("#bearing").html("True");
			$gmap.bearings= "true";			
			displayMarksLL();
		}
	);	

	// Race committees
	$("#addRC").click( function() {
		var spec= rcBoats.shift();
		$.fn.gMap.addMarker( spec, $gmap );
		if (!rcBoats.length ) { $(this).hide()};
	});

	// New Marks
	$("#addMark").click( function() {
		var spec= newMarks.shift();
		$.fn.gMap.addMarker( spec, $gmap );
		if (!newMarks.length ) { $(this).hide()};
	});	

});



function dragEnd() {
	displayMarksLL();
	$("#toggleGhosts").show();
}

function ghosts( show ) {
	$( $gmap.gMarkers ).each( function() {
		if ( this.originalConfig.ghost ) {
			if ( show ) { this.show(); } else { this.hide(); }
		}
	});
}

function displayMarksLL() {
	// Step 1
	// Latitudes and Longitudes
	var out= [], marker, lat, lng, markers= $gmap.gMarkers;
	for ( var i = 0; i < markers.length; i++ ) {
		marker= markers[ i ];
		if ( ! marker || ! marker.originalConfig ) {
			debugger;
		}
		
		if ( marker.originalConfig.ghost ) { continue; }
		lat= parseInt( marker.getLatLng().y * 1000, 10 )/ 1000;
		lng= parseInt( marker.getLatLng().x * 1000, 10 )/ 1000;
		out.push( marker.originalConfig.html.substr( 0, 1 )+ " " + pad( lat.toString(), 7, "0") + "  "+  pad( lng.toString(), 8, "0") );
	}
	$("#markData").html( out.join("<br>") );

	// Step 2: 
	// Range and bearings
	var d, html="", brgLbl= $gmap.bearings==="true" ? "T" : "m";
    for ( var i = 0; i < markers.length; i++ ) {
	  if ( markers[ i ].originalConfig.ghost ) { continue; }
	  html += '<div class="rb">'
      for ( var j=0; j<markers.length; j++ ) {
        if ( markers[ j ].originalConfig.ghost ) { continue; }
	
        if ( i !== j ) {
          d=markers[ i ].getPoint().distanceFrom(markers[ j ].getPoint())/1000*0.539956803;

          html += "<strong>"+markers[ i ].originalConfig.html.substr(0,1)+ "->"+markers[ j ].originalConfig.html.substr(0,1);
          html += "<\/strong> "+ d.toFixed(2) + " ";
          html += $gmap.userBearing( bearing( markers[ i ].getPoint(), markers[ j ].getPoint() )) + "&deg;"+brgLbl+"<br>";
        }
      }
      html += "</div>"
    }

	$( "#rbdata" ).html( html );	
}

/**
*
*  Javascript string pad
*  http://www.webtoolkit.info/
*
**/
 
var STR_PAD_LEFT = 1;
var STR_PAD_RIGHT = 2;
var STR_PAD_BOTH = 3;

function pad(str, len, pad, dir) {
 
	if (typeof(len) == "undefined") { var len = 0; }
	if (typeof(pad) == "undefined") { var pad = ' '; }
	if (typeof(dir) == "undefined") { var dir = STR_PAD_RIGHT; }
 
	if (len + 1 >= str.length) {
		switch (dir){
			case STR_PAD_LEFT:
				str = Array(len + 1 - str.length).join(pad) + str;
			break;
			case STR_PAD_BOTH:
				var right = Math.ceil((padlen = len - str.length) / 2);
				var left = padlen - right;
				str = Array(left+1).join(pad) + str + Array(right+1).join(pad);
			break;
			default:
				str = str + Array(len + 1 - str.length).join(pad);
			break;
		} // switch
	}
	return str;
}

var degreesPerRadian = 180.0 / Math.PI;
var radiansPerDegree = Math.PI / 180.0;


// Returns the bearing in degrees between two points.
// North = 0, East = 90, South = 180, West = 270.
function bearing( from, to ) {
  // See T. Vincenty, Survey Review, 23, No 176, p 88-93,1975.
  // Convert to radians.
  var lat1 = from.latRadians();
  var lon1 = from.lngRadians();
  var lat2 = to.latRadians();
  var lon2 = to.lngRadians();

  // Compute the angle.
  var angle = - Math.atan2( Math.sin( lon1 - lon2 ) * Math.cos( lat2 ), Math.cos( lat1 ) * Math.sin( lat2 ) - Math.sin( lat1 ) * Math.cos( lat2 ) * Math.cos( lon1 - lon2 ) );
  if ( angle < 0.0 ) { angle  += Math.PI * 2.0; }

  // And convert result to degrees.
  angle = angle * degreesPerRadian;
  angle = angle.toFixed(0);

  return angle;
}      

function	markerSort( a , b ) {
		if ( !a || !b ) { return 0; }
		return a.originalConfig.html > b.originalConfig.html ? 1 : 0;
};


</script>
</body>
</html>