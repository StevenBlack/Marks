<!DOCTYPE html>
<html lang="en">
<head>
<title>KYC Marks</title>
<style>
#map { height:500px; width:800px; border:1px solid black;}
#markData { width: 200px; padding-left:1em; font-family:courier;}
#map, #markData { float:left; }
#mouse {font-weight: bold;}
.rb {width:150px; float:left;padding-left:1em; padding-bottom: 2em; font-family:courier;}
</style>
</head>
<body>
	<!-- http://gmap.nurtext.de/ -->
<h3>KYC Marks</h3>
Mouse Latitude / Longitude: <input id="mouse" type="text"> <!-- <button id="refresh" type="button">Refresh data!</button> -->
<div style="clear:both"></div>
<div id="map"></div>
<div id="markData"></div>
<div style="clear:both"></div>
<div id="rbdata"></div>



<script type="text/javascript">
var gmKeys= {
	"k7waterfrontorg" : "ABQIAAAA1p3H4HjgFRGggryYDUwteBR-GVf7FupmKPSRacfkHsUAYJ32hxQkhp8NHbvWfAqlbX-s46HBiGLxpQ",
	"k7waterfrontcom" : "ABQIAAAA9UjYEZNshce6n1Gi1oDOZRQvrUIvRiY5z4Dot4oYMy9uZJYfGhSveungqDjj2yffNXVThDc_wbPzGA",
	"k7waterfrontca"  : "ABQIAAAA9UjYEZNshce6n1Gi1oDOZRQtlChVTc9c46L-tXnUNcQRfaZ7YBRdIcqdc_UNdJwJRglpIdE0KKCLZg",
	"localhost"       : "ABQIAAAA1p3H4HjgFRGggryYDUwteBT2yXp_ZAY8_ufC3CFXhHIE1NvwkxRKJ9lPafzRFCzaRsPQSUSKAe2tww"
};
</script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js" type="text/javascript"></script> 
<script type="text/javascript" src="http://maps.google.com/maps?file=api&amp;v=2&amp;key=ABQIAAAA1p3H4HjgFRGggryYDUwteBT2yXp_ZAY8_ufC3CFXhHIE1NvwkxRKJ9lPafzRFCzaRsPQSUSKAe2tww"></script>
<script src="jquery.gmaps.js" type="text/javascript"></script> 
<script src="kycMarks.js" type="text/javascript"></script>

<script type="text/javascript">
$(function() {
	
	var defaults = { 
		scrollwheel: false,		
		zoom: 13,
		latitude: 44.2044,
		longitude: -76.4949 };

	settings= $.extend( {}, defaults, kycMarks );
	
	$("#map").gMap( settings );

	$("#refresh").click( displayMarksLL );
  
	
	////Mouse pointer
	GEvent.addListener($gmap, "mousemove", function(point) {
		document.getElementById("mouse").value=point.toUrlValue();
	}); 
	


	var markers= $gmap.gMarkers;

	$( markers ).each( function() {
		GEvent.addListener( this, "dragend",  displayMarksLL );
	})		
	displayMarksLL();
	

	
});


function displayMarksLL() {
	// Step 1
	// Latitudes and Longitudes
	var out= [], marker, lat, lng, markers= $gmap.gMarkers;
	for ( i in markers ) {
		marker= markers[i];
		if ( marker.originalConfig.ghost ) { continue; }
		lat= parseInt(marker.getLatLng().y * 1000, 10 )/ 1000;
		lng= parseInt(marker.getLatLng().x * 1000, 10 )/ 1000;
		out.push( marker.originalConfig.html.substr(0,1)+ " " + pad( lat.toString(), 7, "0") + "  "+  pad( lng.toString(), 8, "0") );
	}
	$("#markData").html( out.join("<br>") );

	// Step 2: 
	// Range and bearings
	var html="";
    for (var i = 0; i<markers.length; i++) {
	  if ( markers[i].originalConfig.ghost ) { continue; }
	  html += '<div class="rb">'
      for (var j=0; j<markers.length; j++) {
        if ( markers[j].originalConfig.ghost ) { continue; }
	
        if (i != j) {
          var d=markers[i].getPoint().distanceFrom(markers[j].getPoint())/1000*0.539956803;

          html += "<strong>"+markers[i].originalConfig.html.substr(0,1)+ "->"+markers[j].originalConfig.html.substr(0,1);
          html += "<\/strong> "+ d.toFixed(2) + " ";
          html += bearing( markers[i].getPoint(), markers[j].getPoint()) + "&deg; <br>";
        }
      }
      html += "</div>"
    }

	$("#rbdata").html( html );	
}

/**
*
*  Javascript string pad
*  http://www.webtoolkit.info/
*
**/
 
var STR_PAD_LEFT = 1;
var STR_PAD_RIGHT = 2;
var STR_PAD_BOTH = 3;

function pad(str, len, pad, dir) {
 
	if (typeof(len) == "undefined") { var len = 0; }
	if (typeof(pad) == "undefined") { var pad = ' '; }
	if (typeof(dir) == "undefined") { var dir = STR_PAD_RIGHT; }
 
	if (len + 1 >= str.length) {
		switch (dir){
			case STR_PAD_LEFT:
				str = Array(len + 1 - str.length).join(pad) + str;
			break;
			case STR_PAD_BOTH:
				var right = Math.ceil((padlen = len - str.length) / 2);
				var left = padlen - right;
				str = Array(left+1).join(pad) + str + Array(right+1).join(pad);
			break;
			default:
				str = str + Array(len + 1 - str.length).join(pad);
			break;
		} // switch
	}
	return str;
}

var degreesPerRadian = 180.0 / Math.PI;
var radiansPerDegree = Math.PI / 180.0;


// Returns the bearing in degrees between two points.
// North = 0, East = 90, South = 180, West = 270.
function bearing( from, to ) {
  // See T. Vincenty, Survey Review, 23, No 176, p 88-93,1975.
  // Convert to radians.
  var lat1 = from.latRadians();
  var lon1 = from.lngRadians();
  var lat2 = to.latRadians();
  var lon2 = to.lngRadians();

  // Compute the angle.
  var angle = - Math.atan2( Math.sin( lon1 - lon2 ) * Math.cos( lat2 ), Math.cos( lat1 ) * Math.sin( lat2 ) - Math.sin( lat1 ) * Math.cos( lat2 ) * Math.cos( lon1 - lon2 ) );
  if ( angle < 0.0 ) { angle  += Math.PI * 2.0; }

  // And convert result to degrees.
  angle = angle * degreesPerRadian;
  angle = angle.toFixed(0);

  return angle;
}      

</script>
</body>
</html>